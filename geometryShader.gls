#version 150 core
layout(points) in;
layout(triangle_strip, max_vertices = 128) out;

const float PI = 3.1415926;

uniform vec2 scaledRadius;
uniform int sides;

void main() {
	for (int i = 0; i < sides; i++) {
		// Angle between each side in radians
		float ang = PI * 2.0 / sides * i;
		// Offset from center of point (0.3 to accomodate for aspect ratio)
		vec4 offset = vec4(cos(ang) * scaledRadius.x, -sin(ang) * scaledRadius.y, 0.0, 0.0);
		gl_Position = gl_in[0].gl_Position + offset;
		EmitVertex();
		gl_Position = gl_in[0].gl_Position;
		EmitVertex();
		ang = PI * 2.0 / sides * (i+1);
		offset = vec4(cos(ang) * scaledRadius.x, -sin(ang) * scaledRadius.y, 0.0, 0.0);
		gl_Position = gl_in[0].gl_Position + offset;
		EmitVertex();
	}
	EndPrimitive();
}